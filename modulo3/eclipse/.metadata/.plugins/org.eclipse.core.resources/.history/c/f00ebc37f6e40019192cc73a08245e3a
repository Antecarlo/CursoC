/*
 * Factura.cpp
 *
 *  Created on: 2 oct. 2019
 *      Author: antonio
 */

#include "Factura.h"
#include <iostream>

Factura::Factura(){
	this->numeroFact=0;
}

Factura::Factura(Fecha f, long numF, Cliente c){
	this->fecha=f;
	this->numeroFact=numF;
	this->cliente=c;
}

void Factura::imprimir() {
	std::cout << "FACTURA NÂº: "<< this->numeroFact << std::endl;
	std::cout << "Fecha: "<< this->fecha << std::endl;
	std::cout <<std::endl;
	std::cout << "Cliente: "<<std::endl;
	std::cout << this->cliente << std::endl;
	std::cout <<std::endl;
	std::cout << "Servicios: "<<std::endl;
	if(this->eventos.size()!=0){
		for(unsigned int i=0; i<this->eventos.size(); i++)
			this->eventos[i]->imprimir();
		//std::cout << *(this->eventos[i]) <<std::endl;
		//for(auto i:this->eventos)
			//std::cout << *i <<std::endl;
	}else{
		std::cout << "No hay servicios"<<std::endl;
	}
	std::cout << std::endl << "BASE IMPONIBLE : " << std::endl;
	std::cout<< "IVA. :" <<std::endl;
	std::cout<< "TOTAL: " <<std::endl;

}

double Factura::calcular() {
	return 0;
}

void Factura::addServicio(std::unique_ptr<Evento> evento) {
	this->eventos.push_back(std::move(evento));
}

Factura::~Factura() {
	// TODO Auto-generated destructor stub
}
