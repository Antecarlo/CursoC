/*
 * matriz.cpp
 *
 *  Created on: 10 oct. 2019
 *      Author: antonio
 */

#include "Matriz.h"

Matriz::Matriz(int filas, int col, int val) {

	this->filas=filas;
	this->col=col;

	//Primero crear el array de fuera:
	//Hazme [filas] punteros unique de tipo int []
	this->datos=std::make_unique<std::unique_ptr<int []>[]>(this->filas);

	for(int i=0;i<filas;i++)
		this->datos[i]=std::make_unique<int []>(this->col);

	for(int i=0;i<filas;i++)
		for(int j=0;j<col;j++)
			this->datos[i][j]=val;
}

bool Matriz::checkSuma(const Matriz& m) {
	return this->filas==m.filas && this->col==m.col;
}

bool Matriz::checkMul(const Matriz& m) {
	return this->col==m.filas;
}

void Matriz::set(int fila, int col, int val) {
	this->datos[fila][col]=val;
}

int Matriz::get(int fila, int col) {
	return this->datos[fila][col];
}

Matriz Matriz::operator +(const Matriz& m) {
	if(checkSuma(m)){
		for(int i=0;i<this->filas;i++)
			for(int j=0;j<this->col;j++)
				this->datos[i][j]=this->datos[i][j]+m.datos[i][j];
		return this;
	}else{
		//Lanzar excepcion
	}
}

Matriz Matriz::operator *(const Matriz& m) {
	if(checkMul(m)){
		for(int i=0;i<this->filas;i++)
			for(int j=0;j<this->col;j++)
				this->datos[i][j]=this->datos[i][j]+m.datos[i][j];
		return this;
	}else{
		//Lanzar excepcion
	}
}
}

Matriz::~Matriz() {
	// TODO Auto-generated destructor stub
}

